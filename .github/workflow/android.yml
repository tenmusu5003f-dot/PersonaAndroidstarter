name: Android CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    name: Build Debug APK
    runs-on: ubuntu-latest

    steps:
      # 1) 取得
      - name: Checkout
        uses: actions/checkout@v4

      # 2. JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      # 3. Android SDK セットアップ
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      # 4. gradlew に実行権限を付与
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # 5. Debug APK をビルド
      - name: Build Debug APK
        run: ./gradlew :app:assembleDebug --stacktrace

      # 2) JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      # 3) Android SDK（最小構成）
      - name: Install Android SDK
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      # 4) Gradle（ラッパーが無い場合にも対応：まず公式Gradleを用意→wrapper生成）
      - name: Setup Gradle CLI
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 8.7

      - name: Generate wrapper if missing
        run: |
          if [ ! -f "./gradlew" ]; then
            gradle wrapper --gradle-version 8.7
          fi
          chmod +x ./gradlew

      # 5) Debug APK ビルド（モジュールが app の場合）
      - name: Build Debug APK
        run: ./gradlew :app:assembleDebug --stacktrace

      # 6) 生成物を保存（どちらの配置でも拾えるように2経路）
      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: |
            app/build/outputs/apk/debug/app-debug.apk
            kt/app/build/outputs/apk/debug/app-debug.apk

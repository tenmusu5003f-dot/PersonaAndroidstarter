name: Android CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:  # 手動実行（署名付きRelease用トリガーにも使う）

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-debug:
    name: Build Debug & Lint/Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
      # setup-java でもOKだけど、Gradle公式アクションの方でキャッシュ最適化
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Accept Android SDK licenses & install tools
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      - name: Setup Gradle (cache)
        uses: gradle/actions/setup-gradle@v3

      - name: Assemble Debug
        run: ./gradlew :app:assembleDebug --stacktrace

      - name: Unit tests
        run: ./gradlew testDebugUnitTest

      - name: Lint
        run: ./gradlew lintDebug

      - name: Upload APK (debug)
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk

      - name: Upload Lint report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lint-report
          path: app/build/reports/lint-results-debug.html

      - name: Upload Test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-report
          path: app/build/reports/tests/testDebugUnitTest/index.html

  build-release:
    # 署名付きReleaseは手動実行のみ（PR/Pushでは走らない）
    if: ${{ github.event_name == 'workflow_dispatch' }}
    name: Build Signed Release (manual)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Android SDK
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      - uses: gradle/actions/setup-gradle@v3

      # ▼ keystoreをSecretsから復元（base64で保存しておく）
      - name: Decode release keystore
        run: echo "$KEYSTORE_BASE64" | base64 -d > release.keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}

      - name: Build Release (signed)
        env:
          KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          KEY_ALIAS:         ${{ secrets.ANDROID_KEY_ALIAS }}
          KEY_PASSWORD:      ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: |
          ./gradlew :app:assembleRelease \
            -Pandroid.injected.signing.store.file=$GITHUB_WORKSPACE/release.keystore \
            -Pandroid.injected.signing.store.password=$KEYSTORE_PASSWORD \
            -Pandroid.injected.signing.key.alias=$KEY_ALIAS \
            -Pandroid.injected.signing.key.password=$KEY_PASSWORD

      - name: Upload APK (release)
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: app/build/outputs/apk/release/app-release.apk

      - name: Upload Proguard mapping
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mapping-release
          path: app/build/outputs/mapping/release/mapping.txt

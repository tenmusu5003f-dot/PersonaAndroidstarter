name: Build
on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with: { distribution: temurin, java-version: '17' }

      - uses: gradle/actions/setup-gradle@v3

      # 1) Wrapperの健全性チェック（存在/サイズ/必要ファイル）
      - name: Check wrapper presence
        id: chk
        run: |
          set -e
          has_root=false; has_kt=false
          [ -f gradlew ] && has_root=true
          [ -f kt/gradlew ] && has_kt=true
          echo "has_root=$has_root" >> $GITHUB_OUTPUT
          echo "has_kt=$has_kt" >> $GITHUB_OUTPUT
          # 2KB未満なら壊れてる（中身がYAML等の可能性）
          if [ -f gradlew ] && [ $(wc -c <gradlew) -lt 2000 ]; then rm -f gradlew; fi
          if [ -f kt/gradlew ] && [ $(wc -c <kt/gradlew) -lt 2000 ]; then rm -f kt/gradlew; fi

      # 2) 無ければ公式Gradleから自己ブートでwrapper生成
      - name: Bootstrap wrapper (if missing)
        if: ${{ steps.chk.outputs.has_root == 'false' && steps.chk.outputs.has_kt == 'false' }}
        run: |
          set -e
          curl -sL https://services.gradle.org/distributions/gradle-8.7-bin.zip -o g.zip
          unzip -q g.zip
          # プロジェクトが kt/ 配下想定。違うなら -p . に変更してOK
          ./gradle-8.7/bin/gradle -p kt wrapper --gradle-version 8.7

      # 3) 改行( CRLF )→LF、実行権限付与
      - name: Sanitize wrapper & chmod
        run: |
          set -e
          WRAP=""
          if   [ -f kt/gradlew ]; then WRAP="kt/gradlew"
          elif [ -f gradlew     ]; then WRAP="gradlew"
          else echo "wrapper not found"; exit 1; fi
          sed -i 's/\r$//' "$WRAP"
          chmod +x "$WRAP"
          echo "WRAP=$WRAP" >> $GITHUB_ENV

      # 4) 依存取得の揺れ対策＋座標指定でビルド
      - name: Build debug APK (stable)
        run: |
          set -e
          PROJ="."
          [ -f kt/gradlew ] && PROJ="kt"
          $WRAP -p "$PROJ" --no-daemon --no-parallel --max-workers=1 \
            --stacktrace clean assembleDebug

      # 5) どちらの配置でもAPKを拾う
      - name: Upload APK (kt/)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-kt
          path: kt/app/build/outputs/apk/debug/app-debug.apk
          if-no-files-found: ignore

      - name: Upload APK (root app/)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-root
          path: app/build/outputs/apk/debug/app-debug.apk
          if-no-files-found: ignore
